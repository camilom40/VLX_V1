<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('../partials/_head.ejs'); %>
    <title>Accessory Management</title>
    <!-- Include Tailwind CSS for styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .btn-primary {
            background: linear-gradient(to right, #2563eb, #3b82f6);
            color: white;
            font-weight: 500;
            padding: 0.5rem 1rem;
            border-radius: 0.375rem;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease-in-out;
            transform: translateY(0);
        }
        .btn-primary:hover {
            background: linear-gradient(to right, #1d4ed8, #2563eb);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transform: translateY(-0.125rem);
        }
        .btn-secondary {
            background: linear-gradient(to right, #4b5563, #6b7280);
            color: white;
            font-weight: 500;
            padding: 0.5rem 1rem;
            border-radius: 0.375rem;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease-in-out;
            transform: translateY(0);
        }
        .btn-secondary:hover {
            background: linear-gradient(to right, #374151, #4b5563);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transform: translateY(-0.125rem);
        }
        .btn-success {
            background: linear-gradient(to right, #059669, #10b981);
            color: white;
            font-weight: 500;
            padding: 0.5rem 1rem;
            border-radius: 0.375rem;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease-in-out;
            transform: translateY(0);
        }
        .btn-success:hover {
            background: linear-gradient(to right, #047857, #059669);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transform: translateY(-0.125rem);
        }
        .btn-danger {
            background: linear-gradient(to right, #dc2626, #ef4444);
            color: white;
            font-weight: 500;
            padding: 0.5rem 1rem;
            border-radius: 0.375rem;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease-in-out;
            transform: translateY(0);
        }
        .btn-danger:hover {
            background: linear-gradient(to right, #b91c1c, #dc2626);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transform: translateY(-0.125rem);
        }
        .search-container {
            position: relative;
        }
        .search-icon {
            position: absolute;
            left: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: #3B82F6;
        }
        .search-input {
            padding-left: 40px;
            transition: all 0.3s ease;
            background-color: #eff6ff;
            border-color: #bfdbfe;
            padding: 0.75rem;
        }
        .search-input:focus {
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);
            transform: scale(1.01);
            background-color: white;
            border-color: #3b82f6;
        }
        .price-badge {
            background-color: #d1fae5;
            color: #065f46;
            padding: 0.375rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.75rem;
            font-weight: 600;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
        }
        .weight-badge {
            background-color: #e0f2fe;
            color: #075985;
            padding: 0.375rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.75rem;
            font-weight: 600;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
        }
        .unit-badge {
            background-color: #f3e8fd;
            color: #6b21a8;
            padding: 0.375rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.75rem;
            font-weight: 600;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
        }
        .reference-badge {
            background-color: #dbeafe;
            color: #1e40af;
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            font-size: 0.75rem;
            font-weight: 500;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
            border: 1px solid #bfdbfe;
        }
        .provider-badge {
            background-color: #eef2ff;
            color: #3730a3;
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            font-size: 0.75rem;
            font-weight: 500;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
            border: 1px solid #e0e7ff;
        }
        .table-row-hover:hover {
            background-color: #dbeafe;
            transition: background-color 0.15s;
        }
        .table-container {
            overflow-x: auto;
            background-color: white;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            border: 1px solid #f3f4f6;
        }
        .table {
            min-width: 100%;
            border-collapse: collapse;
        }
        .table th {
            padding: 0.75rem 1.25rem;
            border-bottom: 2px solid #e5e7eb;
            text-align: left;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            position: sticky;
            top: 0;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
        }
        .table td {
            padding: 0.75rem 1.25rem;
            border-bottom: 1px solid #e5e7eb;
            font-size: 0.875rem;
        }
        .action-button {
            display: flex;
            align-items: center;
            padding: 0.25rem 0.5rem;
            border-radius: 0.375rem;
            transition: all 0.2s;
        }
        .edit-button {
            color: #2563eb;
        }
        .edit-button:hover {
            color: white;
            background-color: #2563eb;
        }
        .delete-button {
            color: #dc2626;
        }
        .delete-button:hover {
            color: white;
            background-color: #dc2626;
        }
        /* Animation for new items */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .accessory-row {
            animation: fadeIn 0.3s ease-out forwards;
        }
        
        /* Clean table header styles */
        .col-ref {
            background-color: #4f46e5;
            color: white;
            font-weight: 500;
            padding: 0.75rem 1rem;
            border-top-left-radius: 0.5rem;
        }
        .col-name {
            background-color: #2563eb;
            color: white;
            font-weight: 500;
            padding: 0.75rem 1rem;
        }
        .col-provider {
            background-color: #7c3aed;
            color: white;
            font-weight: 500;
            padding: 0.75rem 1rem;
        }
        .col-unit {
            background-color: #0284c7;
            color: white;
            font-weight: 500;
            padding: 0.75rem 1rem;
        }
        .col-price {
            background-color: #059669;
            color: white;
            font-weight: 500;
            padding: 0.75rem 1rem;
        }
        .col-weight {
            background-color: #d97706;
            color: white;
            font-weight: 500;
            padding: 0.75rem 1rem;
        }
        .col-actions {
            background-color: #dc2626;
            color: white;
            font-weight: 500;
            padding: 0.75rem 1rem;
            border-top-right-radius: 0.5rem;
        }
        
        .table-header-icon {
            display: inline-block;
            height: 1rem;
            width: 1rem;
            margin-right: 0.5rem;
            opacity: 0.9;
        }
    </style>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Setup form submission for Excel import
            const importForm = document.getElementById('import-form');
            const importFile = document.getElementById('import-file');
            const importHiddenInput = document.getElementById('import-hidden-input');
            
            if (importFile && importForm && importHiddenInput) {
                importFile.addEventListener('change', function(e) {
                    if (this.files.length > 0) {
                        // Copy the file to the hidden input
                        const dataTransfer = new DataTransfer();
                        dataTransfer.items.add(this.files[0]);
                        importHiddenInput.files = dataTransfer.files;
                        
                        // Submit the form with proper loading indicator
                        handleImportFormSubmit(e);
                    }
                });
            }
            
            // Handle import form submission
            async function handleImportFormSubmit(event) {
                event.preventDefault();
                
                const submitBtn = document.createElement('div');
                submitBtn.className = 'fixed top-4 right-4 bg-purple-600 text-white px-4 py-2 rounded-lg flex items-center z-50';
                submitBtn.innerHTML = '<svg class="animate-spin h-5 w-5 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg> Importing accessories...';
                document.body.appendChild(submitBtn);
                
                const formData = new FormData(importForm);
                try {
                    const response = await fetch('/admin/accessories/import-accessories', {
                        method: 'POST',
                        body: formData
                    });
                    const result = await response.json();
                    
                    // Show notification
                    showNotification(result.message, response.ok ? 'success' : 'error');
                    
                    if (response.ok) {
                        setTimeout(() => {
                            location.reload();
                        }, 1500);
                    } else {
                        document.body.removeChild(submitBtn);
                    }
                } catch (error) {
                    console.error('Failed to import data:', error);
                    showNotification('Failed to import data: ' + error.message, 'error');
                    document.body.removeChild(submitBtn);
                }
            }
            
            // Search functionality
            const searchInput = document.getElementById('searchInput');
            const rows = document.querySelectorAll('.accessory-row');
            const totalCount = document.getElementById('accessoryCount');
            
            if (searchInput) {
                searchInput.addEventListener('keyup', function() {
                    const searchTerm = this.value.toLowerCase();
                    let visibleCount = 0;
                    
                    rows.forEach(row => {
                        const text = row.textContent.toLowerCase();
                        if (text.includes(searchTerm)) {
                            row.style.display = '';
                            visibleCount++;
                        } else {
                            row.style.display = 'none';
                        }
                    });
                    
                    // Update the displayed count
                    if (totalCount) {
                        totalCount.textContent = visibleCount;
                    }
                    
                    // Show/hide no results message
                    const table = document.getElementById('accessoryTable');
                    let noResultsMsg = document.querySelector('.no-results-message');
                    
                    if (visibleCount === 0 && rows.length > 0) {
                        if (!noResultsMsg) {
                            noResultsMsg = document.createElement('div');
                            noResultsMsg.className = 'no-results-message bg-white rounded-lg p-8 text-center mt-4 shadow-md';
                            noResultsMsg.innerHTML = `
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 mx-auto text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z" />
                                </svg>
                                <p class="text-gray-600 text-lg">No accessories match your search criteria</p>
                                <p class="text-gray-500 mt-2">Try adjusting your search term</p>`;
                            
                            // Insert after the table
                            table.parentNode.parentNode.insertBefore(noResultsMsg, table.parentNode.nextSibling);
                        } else {
                            noResultsMsg.style.display = 'block';
                        }
                    } else if (noResultsMsg) {
                        noResultsMsg.style.display = 'none';
                    }
                });
            }
            
            // Notification system
            window.showNotification = function(message, type) {
                const notification = document.createElement('div');
                notification.className = `fixed top-4 right-4 px-6 py-3 rounded-lg shadow-lg text-white ${type === 'success' ? 'bg-green-600' : 'bg-red-600'} transition-all duration-300 flex items-center z-50`;
                
                const icon = document.createElement('span');
                icon.className = 'mr-2';
                icon.innerHTML = type === 'success' 
                    ? '<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" /></svg>'
                    : '<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" /></svg>';
                
                notification.appendChild(icon);
                notification.appendChild(document.createTextNode(message));
                document.body.appendChild(notification);
                
                // Animate in
                setTimeout(() => {
                    notification.style.transform = 'translateY(10px)';
                }, 10);
                
                // Fade out and remove after delay
                setTimeout(() => {
                    notification.style.opacity = '0';
                    notification.style.transform = 'translateY(-10px)';
                    setTimeout(() => {
                        if (notification.parentNode) {
                            document.body.removeChild(notification);
                        }
                    }, 300);
                }, 4000);
            }
        });

        // Exchange rate from server
        const exchangeRateValue = <%= exchangeRate || 4000 %>;
        let currentDisplayCurrency = 'COP';

        // Currency conversion functions
        function convertPrice(price, fromCurrency, toCurrency) {
          if (fromCurrency === toCurrency) return price;
          
          if (fromCurrency === 'USD' && toCurrency === 'COP') {
            return price * exchangeRateValue;
          } else if (fromCurrency === 'COP' && toCurrency === 'USD') {
            return price / exchangeRateValue;
          }
          return price;
        }

        // Format price based on currency
        function formatPrice(price, currency) {
          const locale = currency === 'USD' ? 'en-US' : 'es-CO';
          const maximumFractionDigits = currency === 'USD' ? 2 : 0;
          
          return new Intl.NumberFormat(locale, {
            style: 'currency',
            currency: currency,
            maximumFractionDigits: maximumFractionDigits
          }).format(price);
        }

        // Update all price displays
        function updatePriceDisplays() {
          const priceElements = document.querySelectorAll('.price-display');
          
          priceElements.forEach(element => {
            const originalPrice = parseFloat(element.dataset.price);
            const originalCurrency = element.dataset.currency || 'COP';
            
            const convertedPrice = convertPrice(originalPrice, originalCurrency, currentDisplayCurrency);
            element.textContent = formatPrice(convertedPrice, currentDisplayCurrency);
          });
        }

        // Handle currency toggle
        function switchCurrency(currency) {
          currentDisplayCurrency = currency;
          
          // Update button states
          document.getElementById('copBtn').classList.toggle('active', currency === 'COP');
          document.getElementById('usdBtn').classList.toggle('active', currency === 'USD');
          
          // Update button styles
          const activeBtn = currency === 'COP' ? document.getElementById('copBtn') : document.getElementById('usdBtn');
          const inactiveBtn = currency === 'COP' ? document.getElementById('usdBtn') : document.getElementById('copBtn');
          
          activeBtn.className = 'currency-btn active px-3 py-1 text-sm font-medium rounded-md transition-colors bg-blue-600 text-white';
          inactiveBtn.className = 'currency-btn px-3 py-1 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-800';
          
          // Update all prices
          updatePriceDisplays();
        }

        // Initialize event listeners
        document.addEventListener('DOMContentLoaded', function() {
          document.getElementById('copBtn').addEventListener('click', () => switchCurrency('COP'));
          document.getElementById('usdBtn').addEventListener('click', () => switchCurrency('USD'));
          
          // Initial price display
          updatePriceDisplays();
        });
    </script>
</head>
<body class="bg-gray-50 min-h-screen flex flex-col">
    <%- include('../partials/_header.ejs') %>
    
    <main class="flex-grow container mx-auto px-4 py-8">
        <!-- Header with search and filters -->
        <div class="bg-white shadow-sm rounded-lg border border-gray-200 p-6 mb-6">
          <div class="flex justify-between items-center mb-4">
            <h1 class="text-2xl font-bold text-gray-800">Accessories Management</h1>
            <div class="flex items-center space-x-4">
              <!-- Currency Toggle Section -->
              <div class="flex items-center space-x-2">
                <span class="text-sm text-gray-600">Display Currency:</span>
                <div class="flex bg-gray-100 rounded-lg p-1">
                  <button id="copBtn" class="currency-btn active px-3 py-1 text-sm font-medium rounded-md transition-colors bg-blue-600 text-white">
                    COP
                  </button>
                  <button id="usdBtn" class="currency-btn px-3 py-1 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-800">
                    USD
                  </button>
                </div>
              </div>
              <a href="/admin/accessories/add" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center transition duration-200">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                </svg>
                Add New Accessory
              </a>
            </div>
          </div>
        </div>
        
        <!-- Accessories Table -->
        <% if (accessories.length > 0) { %>
            <div class="bg-white rounded-xl shadow-lg overflow-hidden border border-gray-200">
                <div class="overflow-x-auto">
                    <table id="accessoryTable" class="w-full">
                        <thead>
                            <tr class="text-left bg-gradient-to-r from-blue-600 to-indigo-700">
                                <th class="px-6 py-4 text-white font-semibold text-sm rounded-tl-lg">REF</th>
                                <th class="px-6 py-4 text-white font-semibold text-sm">NAME</th>
                                <th class="px-6 py-4 text-white font-semibold text-sm">PROVIDER</th>
                                <th class="px-6 py-4 text-white font-semibold text-sm">UNIT</th>
                                <th class="px-6 py-4 text-white font-semibold text-sm">PRICE</th>
                                <th class="px-6 py-4 text-white font-semibold text-sm">WEIGHT</th>
                                <th class="px-6 py-4 text-white font-semibold text-sm rounded-tr-lg">ACTIONS</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% accessories.forEach(function(accessory, index) { %>
                                <tr class="accessory-row hover:bg-blue-50 border-b border-gray-100 transition-colors duration-150"
                                    data-accessory-info="<%= accessory.name %> <%= accessory.unit %> <%= accessory.price %> <%= accessory.weight %> <%= accessory.referenceNumber || '' %> <%= accessory.providerName || '' %>">
                                    <td class="px-6 py-4 <%= index === accessories.length-1 ? 'rounded-bl-lg' : '' %>">
                                        <span class="px-3 py-1 bg-indigo-100 text-indigo-800 rounded-md text-xs font-medium whitespace-nowrap">
                                            <%= accessory.referenceNumber || 'N/A' %>
                                        </span>
                                    </td>
                                    <td class="px-6 py-4">
                                        <div class="font-medium text-gray-900"><%= accessory.name %></div>
                                    </td>
                                    <td class="px-6 py-4">
                                        <% if (accessory.providerName) { %>
                                            <span class="px-3 py-1 bg-purple-100 text-purple-800 rounded-md text-xs font-medium whitespace-nowrap">
                                                <%= accessory.providerName %>
                                            </span>
                                        <% } else { %>
                                            <span class="text-gray-400 text-sm italic">Not specified</span>
                                        <% } %>
                                    </td>
                                    <td class="px-6 py-4">
                                        <span class="px-3 py-1 bg-sky-100 text-sky-800 rounded-md text-xs font-medium">
                                            <%= accessory.unit %>
                                        </span>
                                    </td>
                                    <td class="px-6 py-4">
                                        <div class="flex items-center justify-between">
                                          <div>
                                            <span class="price-display font-semibold text-lg text-green-600" 
                                                  data-price="<%= accessory.price %>" 
                                                  data-currency="<%= accessory.currency || 'COP' %>">
                                              <!-- Price will be populated by JavaScript -->
                                            </span>
                                            <span class="block text-sm text-gray-500">per <%= accessory.unit %></span>
                                          </div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4">
                                        <% if (accessory.weight) { %>
                                            <span class="px-3 py-1 bg-amber-100 text-amber-800 rounded-md text-xs font-medium whitespace-nowrap">
                                                <%= accessory.weight.toFixed(2) %> kg
                                            </span>
                                        <% } else { %>
                                            <span class="text-gray-400 text-sm italic">--</span>
                                        <% } %>
                                    </td>
                                    <td class="px-6 py-4 <%= index === accessories.length-1 ? 'rounded-br-lg' : '' %>">
                                        <div class="flex space-x-4">
                                            <a href="/admin/accessories/edit/<%= accessory._id %>" 
                                               class="text-blue-600 hover:text-blue-800 transition-colors flex items-center" 
                                               title="Edit">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 0L11.828 15H9v-2.828l8.586-8.586z" />
                                                </svg>
                                            </a>
                                            
                                            <a href="#" onclick="event.preventDefault(); if(confirm('Are you sure you want to delete <%= accessory.name %>?')) document.getElementById('delete-form-<%= accessory._id %>').submit();" 
                                               class="text-red-600 hover:text-red-800 transition-colors flex items-center" 
                                               title="Delete">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                                </svg>
                                            </a>
                                            <form id="delete-form-<%= accessory._id %>" action="/admin/accessories/delete/<%= accessory._id %>" method="post" class="hidden"></form>
                                        </div>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
            
            <div class="mt-4 text-sm text-gray-500 flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                Total accessories: <span id="accessoryCount" class="font-medium text-blue-600 ml-1"><%= accessories.length %></span>
            </div>
        <% } %>
        
        <!-- No results message -->
        <div id="noResults" class="hidden mt-8 text-center py-10 bg-white rounded-lg shadow-md">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 mx-auto text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z" />
            </svg>
            <p class="text-gray-500 text-lg">No accessories match your search</p>
            <p class="text-gray-400 mt-1">Try a different search term</p>
        </div>
        
        <!-- Empty state -->
        <% if (accessories.length === 0) { %>
            <div class="text-center py-12 bg-white rounded-lg shadow-md">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-20 w-20 mx-auto text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z" />
                </svg>
                <h2 class="text-2xl font-semibold text-gray-800 mb-2">No accessories found</h2>
                <p class="text-gray-600 mb-6">Get started by adding your first accessory or importing from Excel</p>
                <div class="flex justify-center space-x-4">
                    <a href="/admin/accessories/add" class="btn-primary flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                        </svg>
                        Add First Accessory
                    </a>
                </div>
            </div>
        <% } %>
    </main>
    
    <%- include('../partials/_footer.ejs') %>
</body>
</html>
