<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Edit Window System</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100">
  <%- include('../partials/_header.ejs') %>
  <div class="container mx-auto py-8">
    <h1 class="text-3xl font-bold mb-6 text-center">Edit Window System</h1>
    <div class="bg-white shadow-md rounded-lg p-6">
      <form id="window-form" action="/admin/edit/<%= windowSystem._id %>" method="POST">
        <div class="mb-4">
          <label for="type" class="block text-gray-700 font-bold mb-2">Window Type:</label>
          <input type="text" id="type" name="type" value="<%= windowSystem.type %>" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
        </div>

        <!-- Profiles Section -->
        <div id="profiles-section" class="mb-8">
          <div class="flex mb-4">
            <select id="profile-id" class="form-control shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
              <option value="">Select Profile</option>
              <% profiles.forEach(profile => { %>
                <option value="<%= profile._id %>"><%= profile.name %></option>
              <% }); %>
            </select>
            <input type="number" id="profile-quantity" placeholder="Quantity" class="form-control ml-2 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
            <select id="profile-orientation" class="form-control ml-2 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
              <option value="" disabled selected>Orientation</option>
              <option value="horizontal">Horizontal</option>
              <option value="vertical">Vertical</option>
            </select>
            <input type="number" id="profile-length-discount" placeholder="Length Discount (inches)" class="form-control ml-2 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
            <button type="button" onclick="addProfileEntry()" class="bg-blue-500 text-white px-4 py-2 rounded ml-2">Add Profile</button>
          </div>

          <!-- Table to display added profiles -->
          <div class="mt-6">
            <h3 class="text-lg font-bold text-gray-700 mb-4">Added Profiles</h3>
            <table class="min-w-full bg-white">
              <thead>
                <tr>
                  <th class="py-2 px-4 bg-gray-200">Profile</th>
                  <th class="py-2 px-4 bg-gray-200">Quantity</th>
                  <th class="py-2 px-4 bg-gray-200">Orientation</th>
                  <th class="py-2 px-4 bg-gray-200">Length Discount</th>
                  <th class="py-2 px-4 bg-gray-200">Action</th>
                </tr>
              </thead>
              <tbody id="profiles-table-body">
                <!-- Rows will be dynamically added here -->
              </tbody>
            </table>
          </div>
        </div>

        <!-- Thicker Dark Blue Divider -->
        <hr class="my-10 border-t-4 border-blue-800">

        <!-- Accessories Section -->
        <div id="accessories-section" class="mb-8">
          <div class="flex mb-4">
            <select id="accessory-id" class="form-control shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
              <option value="">Select Accessory</option>
              <% accessories.forEach(accessory => { %>
                <option value="<%= accessory._id %>" data-unit="<%= accessory.unit %>"><%= accessory.name %></option>
              <% }); %>
            </select>
            <input type="number" id="accessory-quantity" placeholder="Quantity" class="form-control ml-2 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
            <input type="text" id="accessory-unit" placeholder="Unit" class="form-control ml-2 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" readonly>
            <button type="button" onclick="addAccessoryEntry()" class="bg-blue-500 text-white px-4 py-2 rounded ml-2">Add Accessory</button>
          </div>

          <!-- Table to display added accessories -->
          <div class="mt-6">
            <h3 class="text-lg font-bold text-gray-700 mb-4">Added Accessories</h3>
            <table class="min-w-full bg-white">
              <thead>
                <tr>
                  <th class="py-2 px-4 bg-gray-200">Accessory</th>
                  <th class="py-2 px-4 bg-gray-200">Quantity</th>
                  <th class="py-2 px-4 bg-gray-200">Unit</th>
                  <th class="py-2 px-4 bg-gray-200">Action</th>
                </tr>
              </thead>
              <tbody id="accessories-table-body">
                <!-- Rows will be dynamically added here -->
              </tbody>
            </table>
          </div>
        </div>

        <!-- Thicker Dark Blue Divider -->
        <hr class="my-10 border-t-4 border-blue-800">

        <!-- Glass Restrictions Section -->
        <div class="mb-8">
          <h2 class="text-lg font-bold text-gray-700 mb-4">Glass Restrictions</h2>
          <div id="glass-restrictions-container">
            <div class="glass-restriction-entry mb-4 p-4 bg-gray-50 rounded-lg shadow-inner">
              <label class="block text-gray-700 font-bold mb-1">Glass Type:</label>
              <select id="glass-type" class="form-control mb-2 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                <option value="A">A</option>
                <option value="B">B</option>
                <option value="C">C</option>
              </select>
              <label class="block text-gray-700 font-bold mb-1">Width (inches):</label>
              <input type="number" id="glass-width" class="form-control mb-2 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
              <label class="block text-gray-700 font-bold mb-1">Height (inches):</label>
              <input type="number" id="glass-height" class="form-control mb-2 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
              <label class="block text-gray-700 font-bold mb-1">Positive Pressure (EXT+):</label>
              <input type="number" id="glass-positive-pressure" class="form-control mb-2 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
              <label class="block text-gray-700 font-bold mb-1">Negative Pressure (EXT):</label>
              <input type="number" id="glass-negative-pressure" class="form-control mb-2 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
              <button type="button" class="bg-blue-500 text-white px-4 py-2 rounded mt-4" onclick="addGlassRestriction()">Add Glass Restriction</button>
            </div>
          </div>

          <!-- Table to display added glass restrictions -->
          <div class="mt-6">
            <h3 class="text-lg font-bold text-gray-700 mb-4">Added Glass Restrictions</h3>
            <table class="min-w-full bg-white">
              <thead>
                <tr>
                  <th class="py-2 px-4 bg-gray-200">Type</th>
                  <th class="py-2 px-4 bg-gray-200">Width (inches)</th>
                  <th class="py-2 px-4 bg-gray-200">Height (inches)</th>
                  <th class="py-2 px-4 bg-gray-200">Positive Pressure (EXT+)</th>
                  <th class="py-2 px-4 bg-gray-200">Negative Pressure (EXT)</th>
                  <th class="py-2 px-4 bg-gray-200">Action</th>
                </tr>
              </thead>
              <tbody id="glass-restrictions-table-body">
                <!-- Rows will be dynamically added here -->
              </tbody>
            </table>
          </div>
        </div>

        <!-- Submit Button -->
        <div class="mt-4 flex justify-end">
          <button type="submit" class="bg-green-500 text-white px-4 py-2 rounded">Update</button>
        </div>
      </form>
      <a href="/admin" class="bg-gray-500 text-white px-4 py-2 rounded mt-4 inline-block">Back to Admin Console</a>
    </div>
  </div>
  <%- include('../partials/_footer.ejs') %>

  <script>
    let profiles = <%- JSON.stringify(windowSystem.profiles.map(profile => ({
      profileId: profile.profile._id,
      profileName: profile.profile.name,
      quantity: profile.quantity,
      orientation: profile.orientation,
      lengthDiscount: profile.lengthDiscount,
    }))) %>;

    let accessories = <%- JSON.stringify(windowSystem.accessories.map(accessory => ({
      accessoryId: accessory.accessory._id,
      accessoryName: accessory.accessory.name,
      quantity: accessory.quantity,
      unit: accessory.unit,
    }))) %>;

    let glassRestrictions = <%- JSON.stringify(windowSystem.glassRestrictions.map(glass => ({
      type: glass.type,
      width: glass.width,
      height: glass.height,
      positivePressure: glass.positivePressure,
      negativePressure: glass.negativePressure,
    }))) %>; 

    function addProfileEntry() {
      const profileSelect = document.getElementById('profile-id');
      const profileId = profileSelect.value;
      const profileName = profileSelect.options[profileSelect.selectedIndex].text;
      const quantity = document.getElementById('profile-quantity').value;
      const orientation = document.getElementById('profile-orientation').value;
      const lengthDiscount = document.getElementById('profile-length-discount').value;

      if (profileId && quantity && orientation && lengthDiscount) {
        profiles.push({ profileId, profileName, quantity, orientation, lengthDiscount });
        renderProfilesTable();
      }
    }

    function renderProfilesTable() {
      const tableBody = document.getElementById('profiles-table-body');
      tableBody.innerHTML = '';
      profiles.forEach((profile, index) => {
        const row = `
          <tr>
            <td class="py-2 px-4 border">${profile.profileName}</td>
            <td class="py-2 px-4 border">${profile.quantity}</td>
            <td class="py-2 px-4 border">${profile.orientation}</td>
            <td class="py-2 px-4 border">${profile.lengthDiscount}</td>
            <td class="py-2 px-4 border">
              <button type="button" class="bg-red-500 text-white px-4 py-2 rounded" onclick="removeProfile(${index})">Remove</button>
            </td>
          </tr>
        `;
        tableBody.insertAdjacentHTML('beforeend', row);
      });
    }

    function removeProfile(index) {
      profiles.splice(index, 1);
      renderProfilesTable();
    }

    function addAccessoryEntry() {
      const accessorySelect = document.getElementById('accessory-id');
      const accessoryId = accessorySelect.value;
      const accessoryName = accessorySelect.options[accessorySelect.selectedIndex].text;
      const quantity = document.getElementById('accessory-quantity').value;
      const unit = document.getElementById('accessory-unit').value;

      if (accessoryId && quantity && unit) {
        accessories.push({ accessoryId, accessoryName, quantity, unit });
        renderAccessoriesTable();
      }
    }

    function renderAccessoriesTable() {
      const tableBody = document.getElementById('accessories-table-body');
      tableBody.innerHTML = '';
      accessories.forEach((accessory, index) => {
        const row = `
          <tr>
            <td class="py-2 px-4 border">${accessory.accessoryName}</td>
            <td class="py-2 px-4 border">${accessory.quantity}</td>
            <td class="py-2 px-4 border">${accessory.unit}</td>
            <td class="py-2 px-4 border">
              <button type="button" class="bg-red-500 text-white px-4 py-2 rounded" onclick="removeAccessory(${index})">Remove</button>
            </td>
          </tr>
        `;
        tableBody.insertAdjacentHTML('beforeend', row);
      });
    }

    function removeAccessory(index) {
      accessories.splice(index, 1);
      renderAccessoriesTable();
    }

    function addGlassRestriction() {
      const type = document.getElementById('glass-type').value;
      const width = document.getElementById('glass-width').value;
      const height = document.getElementById('glass-height').value;
      const positivePressure = document.getElementById('glass-positive-pressure').value;
      const negativePressure = document.getElementById('glass-negative-pressure').value;

      if (type && width && height && positivePressure && negativePressure) {
        glassRestrictions.push({ type, width, height, positivePressure, negativePressure });
        renderGlassRestrictionsTable();
      }
    }

    function renderGlassRestrictionsTable() {
      const tableBody = document.getElementById('glass-restrictions-table-body');
      tableBody.innerHTML = '';
      glassRestrictions.forEach((glass, index) => {
        const row = `
          <tr>
            <td class="py-2 px-4 border">${glass.type}</td>
            <td class="py-2 px-4 border">${glass.width}</td>
            <td class="py-2 px-4 border">${glass.height}</td>
            <td class="py-2 px-4 border">${glass.positivePressure}</td>
            <td class="py-2 px-4 border">${glass.negativePressure}</td>
            <td class="py-2 px-4 border">
              <button type="button" class="bg-red-500 text-white px-4 py-2 rounded" onclick="removeGlassRestriction(${index})">Remove</button>
            </td>
          </tr>
        `;
        tableBody.insertAdjacentHTML('beforeend', row);
      });
    }

    function removeGlassRestriction(index) {
      glassRestrictions.splice(index, 1);
      renderGlassRestrictionsTable();
    }

    // Attach event listeners and ensure correct data is sent on form submission
    document.getElementById('accessory-id').addEventListener('change', function() {
      const selectedOption = this.options[this.selectedIndex];
      const unit = selectedOption.getAttribute('data-unit');
      document.getElementById('accessory-unit').value = unit || '';
    });

    document.getElementById('window-form').addEventListener('submit', function(event) {
      const form = event.target;
      const profilesInput = document.createElement('input');
      profilesInput.type = 'hidden';
      profilesInput.name = 'profiles';
      profilesInput.value = JSON.stringify(profiles);
      form.appendChild(profilesInput);

      const accessoriesInput = document.createElement('input');
      accessoriesInput.type = 'hidden';
      accessoriesInput.name = 'accessories';
      accessoriesInput.value = JSON.stringify(accessories);
      form.appendChild(accessoriesInput);

      const glassRestrictionsInput = document.createElement('input');
      glassRestrictionsInput.type = 'hidden';
      glassRestrictionsInput.name = 'glassRestrictions';
      glassRestrictionsInput.value = JSON.stringify(glassRestrictions);
      form.appendChild(glassRestrictionsInput);
    });

    // Initial render of the tables with pre-loaded data
    renderProfilesTable();
    renderAccessoriesTable();
    renderGlassRestrictionsTable();
  </script>
</body>
</html>
