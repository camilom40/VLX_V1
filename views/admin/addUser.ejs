<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../partials/_head.ejs'); %>
  <title>Add New User</title>
  <style>
    .input-field {
      width: 100%;
      padding: 0.625rem 1rem;
      border-radius: 0.5rem;
      border: 1px solid #d1d5db;
      background-color: white;
      color: #111827;
    }
    .input-field:focus {
      outline: none;
      border-color: #3b82f6;
      box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.5);
    }
    .input-field:hover {
      border-color: #60a5fa;
    }
    .label {
      display: block;
      font-size: 0.875rem;
      font-weight: 700;
      margin-bottom: 0.5rem;
      color: #111827;
    }
    .label-transport {
      color: #1e40af;
    }
    .label-manufacturing {
      color: #166534;
    }
    .label-administrative {
      color: #6b21a8;
    }
    .input-group {
      position: relative;
    }
    .input-group::before {
      content: '$';
      position: absolute;
      left: 1rem;
      top: 50%;
      transform: translateY(-50%);
      color: #6b7280;
    }
    .input-group::after {
      content: 'COP';
      position: absolute;
      right: 1rem;
      top: 50%;
      transform: translateY(-50%);
      color: #6b7280;
      font-size: 0.875rem;
    }
    .input-group input {
      padding-left: 2rem;
      padding-right: 3rem;
    }
    .field-description {
      font-size: 0.75rem;
      color: #6b7280;
      margin-top: 0.25rem;
    }
    .section-header {
      font-size: 1.125rem;
      font-weight: 600;
      color: #1f2937;
      margin-bottom: 1rem;
      padding-bottom: 0.5rem;
      border-bottom: 1px solid #e5e7eb;
    }
    .section-subheader {
      font-size: 0.875rem;
      color: #4b5563;
      margin-bottom: 1rem;
    }
    .form-input {
      width: 100%;
      padding: 0.625rem 1rem;
      border-radius: 0.375rem;
      border: 1px solid #d1d5db;
      background-color: white;
      color: #111827;
      transition: all 0.2s;
    }
    .form-input:focus {
      outline: none;
      border-color: #3b82f6;
      box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.5);
    }
    .form-input:hover {
      border-color: #60a5fa;
    }
    .input-with-icon {
      position: relative;
    }
    .input-icon {
      position: absolute;
      left: 0.75rem;
      top: 50%;
      transform: translateY(-50%);
      color: #3b82f6;
      pointer-events: none;
      z-index: 10;
    }
    .form-label {
      display: block;
      font-size: 0.875rem;
      font-weight: 500;
      color: #374151;
      margin-bottom: 0.25rem;
    }
    .required-field {
      color: #ef4444;
      margin-left: 0.25rem;
      font-size: 1.125rem;
      line-height: 1;
      position: relative;
      top: 3px;
    }
    .form-help-text {
      font-size: 0.75rem;
      color: #6b7280;
      margin-top: 0.25rem;
    }
    .error-message {
      color: #ef4444;
      font-size: 0.875rem;
      margin-top: 0.25rem;
      display: none;
    }
    .btn-primary {
      background: linear-gradient(to right, #2563eb, #3b82f6);
      color: white;
      font-weight: 500;
      padding: 0.625rem 1.5rem;
      border-radius: 0.375rem;
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
      transition: all 0.3s ease-in-out;
    }
    .btn-primary:hover {
      background: linear-gradient(to right, #1d4ed8, #2563eb);
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      transform: translateY(-0.5px);
    }
    .btn-secondary {
      background: linear-gradient(to right, #4b5563, #6b7280);
      color: white;
      font-weight: 500;
      padding: 0.625rem 1.5rem;
      border-radius: 0.375rem;
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
      transition: all 0.3s ease-in-out;
    }
    .btn-secondary:hover {
      background: linear-gradient(to right, #374151, #4b5563);
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      transform: translateY(-0.5px);
    }
    .btn-danger {
      background: linear-gradient(to right, #dc2626, #ef4444);
      color: white;
      font-weight: 500;
      padding: 0.625rem 1.5rem;
      border-radius: 0.375rem;
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
      transition: all 0.3s ease-in-out;
    }
    .btn-danger:hover {
      background: linear-gradient(to right, #b91c1c, #dc2626);
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      transform: translateY(-0.5px);
    }
    .input-group-text {
      position: absolute;
      right: 0;
      top: 0;
      height: 100%;
      padding: 0 0.75rem;
      display: flex;
      align-items: center;
      background-color: #dbeafe;
      color: #1e40af;
      font-weight: 500;
      border: 1px solid #bfdbfe;
      border-left: none;
      border-top-right-radius: 0.375rem;
      border-bottom-right-radius: 0.375rem;
      transition: all 0.2s;
    }
    input:focus + .input-group-text {
      border-color: #3b82f6;
      background-color: #bfdbfe;
      color: #1e40af;
    }
    .form-section {
      border-bottom: 1px solid #e5e7eb;
      padding-bottom: 1.25rem;
      margin-bottom: 1.25rem;
    }
    .form-section:last-child {
      border-bottom: none;
      padding-bottom: 0;
      margin-bottom: 0;
    }
    .form-card {
      background-color: white;
      border-radius: 0.5rem;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
      padding: 1.5rem;
      margin-bottom: 1.5rem;
      transition: all 0.3s;
    }
    .form-card:hover {
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
  </style>
</head>
<body class="bg-gray-50 min-h-screen flex flex-col">
  <%- include('../partials/_header.ejs'); %>

  <main class="flex-grow container mx-auto px-4 py-6">
    <!-- Header Section -->
    <div class="bg-white rounded-xl shadow-sm p-6 mb-6">
      <div class="flex flex-col md:flex-row justify-between items-center mb-6">
        <div>
          <h1 class="text-2xl font-bold mb-4 flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7 mr-3 text-gray-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z" />
            </svg>
            <span class="text-gray-800">Add New User</span>
          </h1>
          <p class="text-gray-600">Create a new user account with appropriate permissions for the VLX System.</p>
        </div>
      </div>

      <!-- Action Buttons -->
      <div class="flex flex-wrap gap-3 justify-start items-center">
        <a href="/admin/users" class="w-full sm:w-auto bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg flex items-center justify-center transition-colors duration-200">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 19l-7-7m0 0l7-7m-7 7h18" />
          </svg>
          Back to Users
        </a>
      </div>
    </div>

    <!-- User Form -->
    <div class="bg-white rounded-xl shadow-sm p-6">
      <div class="mb-6">
        <h2 class="section-header">User Information</h2>
        <p class="section-subheader">Fill in the details for the new user account</p>
      </div>

      <form action="/admin/users/add" method="POST" class="space-y-6">
        <!-- Username -->
        <div>
          <label for="username" class="label">Username</label>
          <input 
            type="text" 
            id="username" 
            name="username" 
            class="input-field"
            placeholder="Enter username" 
            required>
          <p class="field-description">Username will be used for login purposes</p>
        </div>
        
        <!-- Password -->
        <div>
          <label for="password" class="label">Password</label>
          <div class="relative">
            <input 
              type="password" 
              id="password" 
              name="password" 
              class="input-field"
              placeholder="Enter password" 
              required>
            <button 
              type="button" 
              id="togglePassword" 
              class="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
              </svg>
            </button>
          </div>
          <div class="flex justify-between mt-2">
            <p class="field-description">Create a strong password for security</p>
            <button 
              type="button" 
              id="generatePassword" 
              class="text-sm text-blue-600 hover:text-blue-700 font-medium">
              Generate secure password
            </button>
          </div>
        </div>
        
        <!-- Role -->
        <div>
          <label for="role" class="label">User Role</label>
          <select 
            id="role" 
            name="role" 
            class="input-field">
            <option value="user">User</option>
            <option value="admin">Administrator</option>
          </select>
          <p class="field-description">
            <span class="font-medium">User:</span> Standard access to system features<br>
            <span class="font-medium">Administrator:</span> Full access to all system features and settings
          </p>
        </div>
        
        <!-- Pricing Tier -->
        <div>
          <label for="pricingTier" class="label">Pricing Tier</label>
          <select 
            id="pricingTier" 
            name="pricingTier" 
            class="input-field">
            <option value="">Not Set</option>
            <option value="tier1">Small Volume (< $10k/year)</option>
            <option value="tier2">Medium Volume ($10k - $50k/year)</option>
            <option value="tier3">Large Volume ($50k - $250k/year)</option>
            <option value="tier4">Enterprise Volume (> $250k/year)</option>
          </select>
          <p class="field-description">Select the appropriate pricing tier based on expected purchase volume</p>
        </div>

        <!-- Actions -->
        <div class="flex justify-end space-x-4 pt-4">
          <button type="submit" class="bg-gray-700 hover:bg-gray-800 text-white px-6 py-2 rounded-lg flex items-center transition-colors duration-200">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
            Create User
          </button>
        </div>
      </form>
    </div>
  </main>

  <%- include('../partials/_footer.ejs'); %>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Password visibility toggle
      const togglePassword = document.getElementById('togglePassword');
      const password = document.getElementById('password');
      
      togglePassword.addEventListener('click', function() {
        const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
        password.setAttribute('type', type);
        
        // Change the icon based on password visibility
        if (type === 'text') {
          this.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21" />
          </svg>`;
        } else {
          this.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
          </svg>`;
        }
      });
      
      // Password generator
      const generatePassword = document.getElementById('generatePassword');
      
      generatePassword.addEventListener('click', function() {
        // Generate a random password (12-16 characters)
        const length = Math.floor(Math.random() * 5) + 12; // Length between 12-16
        const charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()-_=+";
        let newPassword = "";
        
        // Ensure at least one of each character type
        newPassword += getRandomChar("ABCDEFGHIJKLMNOPQRSTUVWXYZ"); // Uppercase
        newPassword += getRandomChar("abcdefghijklmnopqrstuvwxyz"); // Lowercase
        newPassword += getRandomChar("0123456789"); // Number
        newPassword += getRandomChar("!@#$%^&*()-_=+"); // Special
        
        // Fill the rest randomly
        for (let i = 4; i < length; i++) {
          newPassword += charset.charAt(Math.floor(Math.random() * charset.length));
        }
        
        // Shuffle the password characters
        newPassword = shuffleString(newPassword);
        
        // Set the password value
        password.value = newPassword;
        
        // Show the password temporarily
        password.type = 'text';
        setTimeout(() => {
          password.type = 'password';
          togglePassword.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
          </svg>`;
        }, 2000);
      });
      
      function getRandomChar(charset) {
        return charset.charAt(Math.floor(Math.random() * charset.length));
      }
      
      function shuffleString(str) {
        const arr = str.split('');
        for (let i = arr.length - 1; i > 0; i--) {
          const j = Math.floor(Math.random() * (i + 1));
          [arr[i], arr[j]] = [arr[j], arr[i]];
        }
        return arr.join('');
      }
    });
  </script>
</body>
</html>
